{
  "Else branch": {
    "prefix": ["else"],
    "body": [
      "else {",
      "\t${0:expr}",
      "}"
    ]
  },
  "For loop": {
    "prefix": ["for"],
    "body": [
      "for ${1:element} in ${2:collection} {",
      "\t${0:expr}",
      "}"
    ]
  },
  "Function": {
    "prefix": ["function"],
    "body": [
      "function ${1:my_function}(${2:params}): ${3:Return_Type} {",
      "\t${0:???}",
      "}"
    ]
  },
  "If expression": {
    "prefix": ["if"],
    "body": [
      "if ${1:expr} {",
      "\t${0:???}",
      "}"
    ]
  },
  "If-let expression": {
    "prefix": ["if-let"],
    "body": [
      "if let ${1:pattern} = ${2:expr} {",
      "\t${0:???}",
      "}"
    ]
  },
  "Let binding": {
    "prefix": ["let"],
    "body": "let ${1:ident} = ${0:expr}"
  },
  "Match clause": {
    "prefix": ["match"],
    "body": [
      "match ${1:expr} {",
      "\t| ${2:pattern} => ${0:expr}",
      "}"
    ]
  },
  "Type declaration": {
    "prefix": ["type"],
    "body": "type ${1:MyType} = ${0:???}"
  },
  "Type-alias declaration": {
    "prefix": ["type-alias"],
    "body": "type alias ${1:MyType} = ${0:???}"
  },
  "Var binding": {
    "prefix": ["var"],
    "body": "var ${1:ident} = ${0:expr}"
  },
  "While loop": {
    "prefix": ["while"],
    "body": [
      "while ${1:expr} {",
      "\t${0:expr}",
      "}"
    ]
  }
}
