{
  "Case clause": {
    "prefix": [
      "case"
    ],
    "body": [
      "case ${1:expr}:",
      "\tof ${2:pattern}: ${0:???}"
    ]
  },
  "Case pattern": {
    "prefix": [
      "of"
    ],
    "body": "of ${1:pattern}: ${0:???}"
  },
  "Elif statement": {
    "prefix": [
      "elif"
    ],
    "body": [
      "elif ${1:cond}:",
      "\t${0:???}"
    ]
  },
  "Entry point": {
    "prefix": [
      "main"
    ],
    "body": [
      "[:entry:]",
      "func main() =",
      "\t${0:()}"
    ]
  },
  "For loop": {
    "prefix": [
      "for"
    ],
    "body": [
      "for ${1:item} in ${2:items}:",
      "\t${0:???}"
    ]
  },
  "Function definition": {
    "prefix": [
      "func"
    ],
    "body": [
      "func ${1:ident}(${2:params: ???})${3:: ???} =",
      "\t${0:???}"
    ]
  },
  "If statement": {
    "prefix": [
      "if"
    ],
    "body": [
      "if ${1:cond}:",
      "\t${0:???}"
    ]
  },
  "Iterator definition": {
    "prefix": [
      "iter"
    ],
    "body": [
      "iter ${1:ident}(${2:params: ???})${3:: ???} =",
      "\t${0:()}"
    ]
  },
  "Let binding": {
    "prefix": [
      "let"
    ],
    "body": "let ${1:ident} = ${0:???}"
  },
  "Return statement": {
    "prefix": [
      "return"
    ],
    "body": "return ${0:???}"
  },
  "Test case": {
    "prefix": [
      "test"
    ],
    "body": [
      "test \"${1:description}\":",
      "\t${0:???}"
    ]
  },
  "Type declaration": {
    "prefix": [
      "type"
    ],
    "body": "type ${1:T} = ${0:()}"
  },
  "Var binding": {
    "prefix": [
      "var"
    ],
    "body": "var ${1:ident} = ${0:???}"
  }
}
